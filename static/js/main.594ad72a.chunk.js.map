{"version":3,"sources":["components/Header.js","components/Searchbox.js","components/Namecard.js","components/Results.js","App.js","index.js"],"names":["Header","titl","headerExpanded","className","src","alt","Searchbox","oninput","onChange","event","target","value","type","placeholder","Namecard","suggestedname","href","Results","namesarr","suggested","map","name","require","App","state","head","Names","handlechange","input","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qLAYeA,EATA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,eACvB,OACI,sBAAKC,UAAU,UAAf,UACE,qBAAKC,IAAI,wGAAwGD,UAAS,kBAAaD,EAAgB,mBAAoB,sBAAwBG,IAAI,SACvM,oBAAIF,UAAS,kBAAcD,EAAgB,mBAAoB,sBAA/D,SAAyFD,QCIhFK,EATG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,QACrB,OACI,qBAAKJ,UAAU,SAAf,SACC,uBAAOK,SAAU,SAACC,GAAD,OAAWF,EAAQE,EAAMC,OAAOC,QAAQC,KAAK,OAAOC,YAAY,qBAAqBV,UAAU,oBCStGW,EAVE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cACpB,OACI,mBAAGL,OAAS,SAASM,KAAI,UAJd,yEAIc,OAAgBD,GAAkBZ,UAAU,WAArE,SACA,qBAAKA,UAAU,WAAf,SACE,mBAAGA,UAAU,gBAAb,SAA8BY,SCOrBE,EAZC,SAAC,GAAmB,IAC1BC,EADyB,EAAhBC,UACYC,KAAI,SAACC,GAC5B,OAAO,cAAC,EAAD,CAAqBN,cAAeM,GAArBA,MAI1B,OACI,qBAAKlB,UAAU,UAAf,SACKe,KCLPG,G,MAAOC,EAAQ,KA4BNC,E,4MA1BbC,MAAQ,CACNC,KAAM,WACNvB,gBAAgB,EAChBwB,MAAO,I,EAGTC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAE3B,gBAAiB0B,EAAOF,MAAOE,EAAQP,EAAKO,GAAO,M,4CAIrE,WACE,OACE,gCACE,cAAC,EAAD,CAAQ1B,eAAgB4B,KAAKN,MAAMtB,eAAgBD,KAAM6B,KAAKN,MAAMC,OACpE,cAAC,EAAD,CAAWlB,QAASuB,KAAKH,eACzB,cAAC,EAAD,CAASR,UAAWW,KAAKN,MAAME,e,GAjBrBK,IAAMC,WCFxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.594ad72a.chunk.js","sourcesContent":["import React from 'react';\r\n// import './index.css';\r\n\r\nconst Header = ({titl, headerExpanded }) =>{\r\nreturn(\r\n    <div className=\"header \">\r\n      <img src=\"https://user-images.githubusercontent.com/26179770/106359099-693e3380-6336-11eb-8069-9e36f25de5ca.png\" className={`headimg ${headerExpanded? 'headimg-expanded': 'headimg-contracted'}`} alt=\"name\"/>\r\n      <h1 className={ `headtxt ${headerExpanded? 'headtxt-expanded': 'headtxt-contracted'}` }>{titl}</h1>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Searchbox = ({ oninput }) =>{\r\nreturn(\r\n    <div className=\"search\">\r\n     <input onChange={(event) => oninput(event.target.value)} type=\"text\" placeholder=\"Type keywords here\" className=\"search-input\"/>\r\n    </div>\r\n)\r\n}\r\n// event handlers(onclick,onchange,...)automatically gets passed on with events\r\n//event.target.value is what user types\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst nameurl =\"https://www.namecheap.com/domains/registration/results/?domain=%27%3B\";\r\n\r\nconst Namecard = ({ suggestedname }) =>{\r\nreturn(\r\n    <a target = \"_blank\" href={ `${nameurl}${suggestedname}` } className=\"cardlink\">\r\n    <div className=\"namecard\">\r\n      <p className=\"namecard-name\">{suggestedname}</p>\r\n    </div>\r\n    </a>\r\n)\r\n}\r\n\r\nexport default Namecard ;","import React from 'react';\r\nimport Namecard from './Namecard.js';\r\n\r\nconst Results = ({ suggested }) => {\r\n    const namesarr = suggested.map((name) =>{\r\n        return <Namecard key={name} suggestedname={name}/>;\r\n        // return <p key={name}>{name} </p>;\r\n    })\r\n\r\n    return (\r\n        <div className=\"results\">\r\n            {namesarr}\r\n        </div>\r\n    )\r\n}\r\nexport default Results;\r\n/* <p>{suggested.length > 0 && suggested[0]}</p> */\r\n/* equivalent to <p>{suggested.length > 0 ? suggested[0] : null}</p> */","import React from 'react';\nimport Header from './components/Header.js'\nimport Searchbox from './components/Searchbox.js'\nimport Results from './components/Results.js'\nimport './index.css';\n//App component is the parent component\nconst name = require('@rstacruz/startup-name-generator');\nclass App extends React.Component {\n  state = {\n    head: \"Name It!\",\n    headerExpanded: true,\n    Names: [],\n  };\n\n  handlechange = (input) => {\n    this.setState({ headerExpanded: !input, Names: input ? name(input):[] });\n  }//as input is string its equivalent to !(input.length > 0 )\n\n\n  render() {\n    return (\n      <div>\n        <Header headerExpanded={this.state.headerExpanded} titl={this.state.head} />\n        <Searchbox oninput={this.handlechange} />\n        <Results suggested={this.state.Names} />\n      </div>\n    );\n  }\n}\n//this is the current class\n//something that might change later needs to be stored in a 'state'(obj)\n//only changing a state does not re-render ,hence we do setState\n//prop is some data that we can transfer from parent component to child component\n//using callback function, we can transfer from child component to parent component\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App.js';\n//App component is the totalapp wherein other components are contained\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n//reactdom renders react component in this html element\n\n"],"sourceRoot":""}